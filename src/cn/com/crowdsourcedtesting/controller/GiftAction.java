/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package cn.com.crowdsourcedtesting.controller;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import cn.com.crowdsourcedtesting.DAO.GiftDAO;
import cn.com.crowdsourcedtesting.bean.Gift;
import cn.com.crowdsourcedtesting.bean.Tester;
import cn.com.crowdsourcedtesting.model.GiftHandler;
import cn.com.crowdsourcedtesting.modelhelper.MethodNumber;
import cn.com.crowdsourcedtesting.struts.form.GiftForm;
import cn.com.other.page.Page;

/** 
 * MyEclipse Struts
 * Creation date: 05-01-2014
 * 
 * XDoclet definition:
 * @struts.action path="/gift" name="giftForm" input="/gifts.jsp" scope="request" validate="true"
 */
public class GiftAction extends DispatchAction {
	
	private String gifttype = "all";
	private String searchvalue = "";
	
	private Page page = new Page();
	
	private GiftHandler handler = new GiftHandler();
	
	/*
	 * Generated Methods
	 */

	/** 
	 * Method selectGift
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward selectGift(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		GiftForm giftForm = (GiftForm) form;// TODO Auto-generated method stub
		int id = giftForm.getGiftId();

		handler.selectGift(request, id);
		
		return mapping.findForward("giftitem");
	}
	
	public ActionForward selectRecentGift(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		GiftForm giftForm = (GiftForm) form;// TODO Auto-generated method stub
		int pagenow = 1;
		this.gifttype = "all";
		System.out.println("Page Now: "+1);
		List<Gift> gifts = new ArrayList();
		GiftDAO dao = new GiftDAO();
		//一页16个礼品
		Page page = new Page();
		page.setCurrentPage(pagenow);
		page.setPerRows(16);
		page.setTotalRows(dao.getTotalRows());
		
		gifts = dao.findByPage(page);
		request.setAttribute("gifts", gifts);
		request.setAttribute("page", page);
		request.setAttribute("isLegal", "legal");
		return mapping.findForward("allgifts");
	}
	/** 
	 * Method selectPage
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward selectPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		GiftForm giftForm = (GiftForm) form;// TODO Auto-generated method stub
		int pagenow = giftForm.getPagenow();

		handler.selectPage(gifttype, this.searchvalue, request, pagenow);
		
		return mapping.findForward("allgifts");
	}
	
	/** 
	 * Method selectAllGifts
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward selectAllGifts(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		GiftForm giftForm = (GiftForm) form;// TODO Auto-generated method stub
		this.gifttype = "all";

		handler.selectAllGifts(request);
		
		return mapping.findForward("allgifts");
	}
	
	/** 
	 * Method selectAvailableGifts
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward selectAvailableGifts(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		GiftForm giftForm = (GiftForm) form;// TODO Auto-generated method stub
		this.gifttype = "available";
		
		handler.selectAvailableGifts(request);
		
		return mapping.findForward("allgifts");
	}
	
	/** 
	 * Method selectSimilarGifts
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward selectSimilarGifts(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		GiftForm giftForm = (GiftForm) form;// TODO Auto-generated method stub
		String value = giftForm.getSearchinput();
		this.gifttype = "similar";
		this.searchvalue = value;
		
		handler.selectSimilarGifts(value, request);
		
		return mapping.findForward("allgifts");
	}
	
	/** 
	 * Method getGift
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward getGift(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		GiftForm giftForm = (GiftForm) form;// TODO Auto-generated method stub
		HttpSession session  = request.getSession();
		Tester tester = (Tester)session.getAttribute("Tester");
		
		if(tester == null)
		{
			return mapping.findForward("changegiftfailed");
		}
		else if(handler.getGift(mapping, giftForm, request, response))
		{
			System.out.println("跳入adrress界面");
			return mapping.findForward("changegift");
		}
		else
			return mapping.findForward("changegiftfailed");
	}
	
	
	/** 
	 * Method changeGift
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward changeGift(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		GiftForm giftForm = (GiftForm) form;// TODO Auto-generated method stub
		
		if(handler.changeGift(mapping, giftForm, request, response))
			return mapping.findForward("changegiftsuccess");
		else
			return mapping.findForward("changegiftfailed");
		
	}
	
	/**
	 * 发货清单
	 */
	public ActionForward changeGiftList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
	
		return handler.generalListRouter(mapping, form, request, "changeGiftList",MethodNumber.MethodOne);
		
		
	}
	
	
}